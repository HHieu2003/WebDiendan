<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tạo Bài viết</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <link rel="stylesheet" href="/css/style.css">
  <style>
    .flash-message-container {
      width: 300px;
      max-width: 100%;
    }
    .alert {
      font-size: 1rem;
      padding: 1rem;
      border-radius: 8px;
    }
    .card {
      border-radius: 12px;
      overflow: hidden;
    }
    .preview-container {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      margin-top: 10px;
    }
    .preview-item {
      max-width: 150px;
      max-height: 150px;
      object-fit: cover;
      border: 1px solid #ddd;
      border-radius: 5px;
    }
    .form-control.is-invalid {
      border-color: #dc3545;
    }
    .invalid-feedback {
      font-size: 0.9rem;
    }
  </style>
</head>
<body>
  <%- include('partials/navbar', { isAuthenticated: isAuthenticated, userRole: userRole, notifications: notifications }) %>
  <div class="container mt-5 pt-5">
    <div class="card shadow">
      <div class="card-header bg-primary text-white text-center">
        <h2>Thêm bài viết mới</h2>
      </div>
      <div class="card-body">
        <!-- Thông báo Flash -->
        <div class="flash-message-container position-fixed top-0 end-0 p-3" style="z-index: 1050;">
          <% if (success_msg && success_msg.length > 0) { %>
            <div id="successAlert" class="alert alert-success alert-dismissible fade show shadow" role="alert">
              <%= success_msg %>
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
          <% } %>
          <% if (error_msg && error_msg.length > 0) { %>
            <div id="errorAlert" class="alert alert-danger alert-dismissible fade show shadow" role="alert">
              <%= error_msg %>
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
          <% } %>
        </div>

        <% if (userRole === 'student' || (userRole === 'teacher' && !isAssignedTeacher)) { %>
          <div class="alert alert-info">
            Bài viết của bạn sẽ cần được giáo viên phê duyệt trước khi hiển thị.
          </div>
        <% } %>

        <form action="/forum/topic/<%= forumId %>/add-post" method="POST" enctype="multipart/form-data" id="postForm" class="needs-validation" novalidate>
          <div class="mb-3">
            <label for="title" class="form-label">Tiêu đề</label>
            <input type="text" class="form-control" id="title" name="title" required value="<%= formData.title || '' %>">
            <div class="invalid-feedback">Vui lòng nhập tiêu đề.</div>
          </div>
          <div class="mb-3">
            <label for="content" class="form-label">Nội dung</label>
            <textarea class="form-control" id="content" name="content" rows="5" required><%= formData.content || '' %></textarea>
            <div class="invalid-feedback">Vui lòng nhập nội dung.</div>
          </div>
          <div class="mb-3">
            <label for="images" class="form-label">Ảnh (JPEG, PNG, GIF)</label>
            <input type="file" class="form-control" id="images" name="images" accept="image/jpeg,image/png,image/gif" multiple>
            <div id="imagePreview" class="preview-container"></div>
          </div>
          <div class="mb-3">
            <label for="videos" class="form-label">Video (MP4, MPEG, WebM)</label>
            <input type="file" class="form-control" id="videos" name="videos" accept="video/mp4,video/mpeg,video/webm" multiple>
            <div id="videoPreview" class="preview-container"></div>
          </div>
          <div class="mb-3">
            <label for="files" class="form-label">Tệp (PDF, TXT, DOC, DOCX)</label>
            <input type="file" class="form-control" id="files" name="files" accept=".pdf,.txt,.doc,.docx" multiple>
            <div id="filePreview" class="preview-container"></div>
          </div>
          <button type="submit" class="btn btn-primary">Đăng bài</button>
        </form>
      </div>
    </div>
  </div>
  <%- include('partials/footer') %>
  <script>
    // Bootstrap validation
    document.getElementById('postForm').addEventListener('submit', function(event) {
      const form = this;
      if (!form.checkValidity()) {
        event.preventDefault();
        event.stopPropagation();
      }
      form.classList.add('was-validated');
    });

    // Tự động ẩn thông báo flash sau 5 giây
    setTimeout(() => {
      ['successAlert', 'errorAlert'].forEach(id => {
        const alert = document.getElementById(id);
        if (alert) {
          const bsAlert = new bootstrap.Alert(alert);
          bsAlert.close();
        }
      });
    }, 5000);

    // Preview images
    document.getElementById('images').addEventListener('change', function(e) {
      const preview = document.getElementById('imagePreview');
      preview.innerHTML = '';
      for (const file of e.target.files) {
        const reader = new FileReader();
        reader.onload = event => {
          const img = document.createElement('img');
          img.src = event.target.result;
          img.classList.add('preview-item');
          preview.appendChild(img);
        };
        reader.readAsDataURL(file);
      }
    });

    // Preview videos
    document.getElementById('videos').addEventListener('change', function(e) {
      const preview = document.getElementById('videoPreview');
      preview.innerHTML = '';
      for (const file of e.target.files) {
        const reader = new FileReader();
        reader.onload = event => {
          const video = document.createElement('video');
          video.src = event.target.result;
          video.classList.add('preview-item');
          video.controls = true;
          preview.appendChild(video);
        };
        reader.readAsDataURL(file);
      }
    });

    // Preview files
    document.getElementById('files').addEventListener('change', function(e) {
      const preview = document.getElementById('filePreview');
      preview.innerHTML = '';
      for (const file of e.target.files) {
        const p = document.createElement('p');
        p.textContent = file.name;
        preview.appendChild(p);
      }
    });
  </script>
</body>
</html>